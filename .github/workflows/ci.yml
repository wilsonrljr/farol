name: CI

on:
  push:
    branches: [ main, master, code/check ]
  pull_request:
    branches: [ main, master, code/check ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
            python-version: '3.13'

      - name: Set up pip cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install project (editable) + dev extras
        run: |
          pip install --upgrade pip
          pip install -e .[dev]

      - name: Run tests with coverage
        run: pytest --cov=backend --cov-report=xml --cov-report=term-missing -q

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml

  frontend-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          # Use o lockfile para chavear cache. Se mover, ajuste.
          cache-dependency-path: frontend/package-lock.json

      - name: Install deps
        run: |
          if [ -f package-lock.json ]; then
            npm ci || (echo "npm ci failed, retrying with clean slate" && rm -rf node_modules && npm install)
          else
            npm install
          fi

      - name: Build
        env:
          VITE_API_BASE: http://localhost:8000
        run: |
          # Workaround para bug de optional deps do npm com rollup native
          if ! npm run build; then
            echo "Primeira tentativa falhou possivelmente por optional deps de rollup. Limpando e reinstalando sem cache...";
            rm -rf node_modules package-lock.json;
            npm install --no-audit --no-fund;
            npm run build;
          fi

  docker-build:
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-build]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build backend image
        run: docker build -f backend/Dockerfile -t farol-backend:ci .

      - name: Build frontend image
  run: docker build -f frontend/Dockerfile -t farol-frontend:ci .
